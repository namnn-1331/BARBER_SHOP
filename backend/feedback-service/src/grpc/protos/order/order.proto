syntax = "proto3";

option java_multiple_files = true;

package order;

message GetListHairStyleRequest {
  repeated int32 ids = 1;
}

message HairStyle {
  int32 id = 1;
  int32 booking = 2;
}

message GetListHairStyleResponse {
  repeated HairStyle hairStyles = 1;
}

message GetListUserFeedbackByOrderIdsRequest {
  repeated int32 orderIds = 1;
}

message GetListUserFeedbackByOrderIdsResponse {
  repeated UserFeedback userFeedbacks = 1;
}

message UserFeedback {
  int32 id = 1;
  string username = 2;
  string avatar = 3;
  int32 orderId = 4;
  string hairColor = 5;
}

message GetListOrderIdByUserIdRequest {
  int32 userId = 1;
}

message GetListOrderIdByUserIdResponse {
  repeated int32 orderIds = 1;
}

message CheckOrderMatchWithUserRequest {
  int32 userId = 1;
  int32 orderId = 2;
}

message CheckOrderMatchWithUserResponse {
  bool isMatch = 1;
}

message GetOrderByIdRequest {
  int32 id = 1;
}

message GetOrderByIdResponse {
  int32 id = 1;
  string hairStyle = 2;
  string hairColor = 3;
  string barber = 4;
  int32 userId = 5;
  string orderTime = 6;
  bool cutted = 7;
  string schedule = 8;
}

service OrderService {
  rpc getListHairStyle(GetListHairStyleRequest) returns (GetListHairStyleResponse) {}
  rpc getListUserFeedbackByOrderIds(GetListUserFeedbackByOrderIdsRequest) returns (GetListUserFeedbackByOrderIdsResponse) {}
  rpc getListOrderByUserId(GetListOrderIdByUserIdRequest) returns (GetListOrderIdByUserIdResponse) {}
  rpc checkOrderMatchWithUser(CheckOrderMatchWithUserRequest) returns (CheckOrderMatchWithUserResponse) {}
  rpc getOrderById(GetOrderByIdRequest) returns (GetOrderByIdResponse) {}
}
