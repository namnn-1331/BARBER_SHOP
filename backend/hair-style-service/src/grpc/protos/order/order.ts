// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.180.0
//   protoc               v3.20.3
// source: src/grpc/protos/order/order.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "order";

export interface GetListHairStyleRequest {
  ids: number[];
}

export interface HairStyle {
  id: number;
  booking: number;
}

export interface GetListHairStyleResponse {
  hairStyles: HairStyle[];
}

export const ORDER_PACKAGE_NAME = "order";

export interface OrderServiceClient {
  getListHairStyle(request: GetListHairStyleRequest): Observable<GetListHairStyleResponse>;
}

export interface OrderServiceController {
  getListHairStyle(
    request: GetListHairStyleRequest,
  ): Promise<GetListHairStyleResponse> | Observable<GetListHairStyleResponse> | GetListHairStyleResponse;
}

export function OrderServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getListHairStyle"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("OrderService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("OrderService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ORDER_SERVICE_NAME = "OrderService";
